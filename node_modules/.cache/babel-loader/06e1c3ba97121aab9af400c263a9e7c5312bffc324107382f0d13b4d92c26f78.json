{"ast":null,"code":"var _jsxFileName = \"/Users/carlosinigofernandez/Desktop/valentine-invite/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\n\n/**\n * Helper function to check if two rectangles overlap.\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction rectOverlap(r1, r2) {\n  return !(r1.left + r1.width < r2.left || r1.left > r2.left + r2.width || r1.top + r1.height < r2.top || r1.top > r2.top + r2.height);\n}\n\n/**\n * RandomDecorations divides the screen into four quadrants.\n * Each decoration is assigned a quadrant (using round-robin per type)\n * and placed randomly within that quadrant's boundaries with extra margin.\n * Overlap is avoided both in general and between similar emojis (with extra spacing).\n */\nconst RandomDecorations = () => {\n  _s();\n  const [decorations, setDecorations] = useState([]);\n  useEffect(() => {\n    const margin = 40; // margin from the container's edges\n    const extraSpacing = 40; // extra spacing between similar emojis\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n    const halfWidth = containerWidth / 2;\n    const halfHeight = containerHeight / 2;\n\n    // Given a quadrant index (0: top-left, 1: top-right, 2: bottom-left, 3: bottom-right)\n    // and a decoration size, return the allowed boundaries.\n    const getQuadrantBounds = (quadIndex, size) => {\n      switch (quadIndex) {\n        case 0:\n          return {\n            leftMin: margin,\n            leftMax: halfWidth - margin - size,\n            topMin: margin,\n            topMax: halfHeight - margin - size\n          };\n        case 1:\n          return {\n            leftMin: halfWidth + margin,\n            leftMax: containerWidth - margin - size,\n            topMin: margin,\n            topMax: halfHeight - margin - size\n          };\n        case 2:\n          return {\n            leftMin: margin,\n            leftMax: halfWidth - margin - size,\n            topMin: halfHeight + margin,\n            topMax: containerHeight - margin - size\n          };\n        case 3:\n          return {\n            leftMin: halfWidth + margin,\n            leftMax: containerWidth - margin - size,\n            topMin: halfHeight + margin,\n            topMax: containerHeight - margin - size\n          };\n        default:\n          return null;\n      }\n    };\n\n    // We'll store decorations per quadrant for overlap checking.\n    const quadrants = [[], [], [], []];\n\n    // Configuration for each type.\n    const config = [{\n      type: 'heart',\n      count: 20,\n      size: 32,\n      emoji: '♥'\n    }, {\n      type: 'arrow',\n      count: 10,\n      size: 32,\n      emoji: '🏹'\n    }, {\n      type: 'teddy',\n      count: 10,\n      size: 48,\n      emoji: '🧸'\n    }];\n    config.forEach(item => {\n      for (let i = 0; i < item.count; i++) {\n        // Assign quadrant in a round-robin way.\n        const quadIndex = i % 4;\n        const bounds = getQuadrantBounds(quadIndex, item.size);\n        let attempts = 0;\n        let placed = false;\n        let left, top;\n        while (!placed && attempts < 100) {\n          attempts++;\n          left = Math.random() * (bounds.leftMax - bounds.leftMin) + bounds.leftMin;\n          top = Math.random() * (bounds.topMax - bounds.topMin) + bounds.topMin;\n          const newRect = {\n            left,\n            top,\n            width: item.size,\n            height: item.size\n          };\n          let overlap = false;\n          // Only check against decorations in the same quadrant.\n          for (let existing of quadrants[quadIndex]) {\n            // If same type, enlarge the existing rectangle by extraSpacing.\n            const requiredExtra = existing.type === item.type ? extraSpacing : 0;\n            const existingRect = {\n              left: existing.left - requiredExtra,\n              top: existing.top - requiredExtra,\n              width: existing.size + 2 * requiredExtra,\n              height: existing.size + 2 * requiredExtra\n            };\n            if (rectOverlap(newRect, existingRect)) {\n              overlap = true;\n              break;\n            }\n          }\n          if (!overlap) {\n            quadrants[quadIndex].push({\n              ...item,\n              left,\n              top,\n              key: `${item.type}-${i}-${attempts}`\n            });\n            placed = true;\n          }\n        }\n        // Fallback: if we couldn't place without overlapping.\n        if (!placed) {\n          left = Math.random() * (bounds.leftMax - bounds.leftMin) + bounds.leftMin;\n          top = Math.random() * (bounds.topMax - bounds.topMin) + bounds.topMin;\n          quadrants[quadIndex].push({\n            ...item,\n            left,\n            top,\n            key: `${item.type}-${i}-fallback`\n          });\n        }\n      }\n    });\n\n    // Combine decorations from all quadrants.\n    const newDecorations = quadrants.flat();\n    setDecorations(newDecorations);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: decorations.map(deco => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: deco.type,\n      style: {\n        position: 'absolute',\n        left: deco.left,\n        top: deco.top,\n        fontSize: `${deco.size}px`\n      },\n      children: deco.emoji\n    }, deco.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(RandomDecorations, \"JLZtyOv2f0eRzHk8p0lvCykNFvA=\");\n_c = RandomDecorations;\nfunction LandingPage() {\n  _s2();\n  const navigate = useNavigate();\n  const cardRef = useRef(null);\n  const [noButtonStyle, setNoButtonStyle] = useState({\n    position: 'absolute',\n    right: '20px',\n    top: '0px'\n  });\n  const [noButtonMessage, setNoButtonMessage] = useState('');\n  const [noButtonClickCount, setNoButtonClickCount] = useState(0);\n  const noMessages = [\"haha you can't catch me 🤣🫵\", \"nope, not this time ❌\", \"no?! 😵\", \"seriously? 💔\"];\n  const handleNoClick = () => {\n    const newCount = noButtonClickCount + 1;\n    setNoButtonClickCount(newCount);\n    // After 10 clicks, remove the button and show \"say yes 🤠\"\n    if (newCount >= 10) {\n      setNoButtonMessage(\"say yes 🤠\");\n      return;\n    }\n    // Otherwise, randomly show one of the messages and move the button.\n    const randomIndex = Math.floor(Math.random() * noMessages.length);\n    setNoButtonMessage(noMessages[randomIndex]);\n    if (cardRef.current) {\n      const containerWidth = cardRef.current.offsetWidth;\n      const containerHeight = cardRef.current.offsetHeight;\n      const buttonWidth = 120;\n      const buttonHeight = 45;\n      const maxLeft = containerWidth - buttonWidth;\n      const maxTop = containerHeight - buttonHeight;\n      const newLeft = Math.random() * maxLeft;\n      const newTop = Math.random() * maxTop;\n      setNoButtonStyle({\n        position: 'absolute',\n        left: `${newLeft}px`,\n        top: `${newTop}px`,\n        transition: 'all 0.1s ease-in-out'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decorations\",\n      children: /*#__PURE__*/_jsxDEV(RandomDecorations, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      ref: cardRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Solomiya, be my Valentine?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"subtitle\",\n        children: \"let's not go solo \\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn yes-btn\",\n          onClick: () => navigate('/invite'),\n          children: \"Yes \\uD83D\\uDC96\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), noButtonClickCount < 10 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn no-btn\",\n          onClick: handleNoClick,\n          style: noButtonStyle,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), noButtonMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: noButtonMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s2(LandingPage, \"feVdweQdBIKw2ivR5dqXUKBVt3E=\", false, function () {\n  return [useNavigate];\n});\n_c2 = LandingPage;\nfunction InvitePage() {\n  // Updated Google Calendar link for a chill evening from 5–7pm,\n  // automatically adding cipf7009@gmail.com to the event.\n  const googleCalendarLink = \"https://calendar.google.com/calendar/r/eventedit?text=valentine's+date+&dates=20250213T170000/20250213T190000&details=Let+me+know+if+this+works+%3A%29%2C+otherwise%2C+I%27ll+meet+you+at+yours&add=cipf7009@gmail.com&add=spast\";\n  const handleAccept = () => {\n    window.open(googleCalendarLink, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decorations\",\n      children: /*#__PURE__*/_jsxDEV(RandomDecorations, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"hey, sexy. let's hang \\uD83E\\uDD70\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"good food, good music, and even better company.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn accept-btn\",\n        onClick: handleAccept,\n        children: \"accept \\uD83D\\uDC8C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 7\n  }, this);\n}\n_c3 = InvitePage;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      src: \"/Lou Val - Eternal Sunshine (Official Visualizer).mp3\",\n      autoPlay: true,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/invite\",\n          element: /*#__PURE__*/_jsxDEV(InvitePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RandomDecorations\");\n$RefreshReg$(_c2, \"LandingPage\");\n$RefreshReg$(_c3, \"InvitePage\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Routes","Route","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","rectOverlap","r1","r2","left","width","top","height","RandomDecorations","_s","decorations","setDecorations","margin","extraSpacing","containerWidth","window","innerWidth","containerHeight","innerHeight","halfWidth","halfHeight","getQuadrantBounds","quadIndex","size","leftMin","leftMax","topMin","topMax","quadrants","config","type","count","emoji","forEach","item","i","bounds","attempts","placed","Math","random","newRect","overlap","existing","requiredExtra","existingRect","push","key","newDecorations","flat","children","map","deco","className","style","position","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","LandingPage","_s2","navigate","cardRef","noButtonStyle","setNoButtonStyle","right","noButtonMessage","setNoButtonMessage","noButtonClickCount","setNoButtonClickCount","noMessages","handleNoClick","newCount","randomIndex","floor","length","current","offsetWidth","offsetHeight","buttonWidth","buttonHeight","maxLeft","maxTop","newLeft","newTop","transition","ref","onClick","_c2","InvitePage","googleCalendarLink","handleAccept","open","_c3","App","src","autoPlay","loop","path","element","_c4","$RefreshReg$"],"sources":["/Users/carlosinigofernandez/Desktop/valentine-invite/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\n\n/**\n * Helper function to check if two rectangles overlap.\n */\nfunction rectOverlap(r1, r2) {\n  return !(\n    r1.left + r1.width < r2.left ||\n    r1.left > r2.left + r2.width ||\n    r1.top + r1.height < r2.top ||\n    r1.top > r2.top + r2.height\n  );\n}\n\n/**\n * RandomDecorations divides the screen into four quadrants.\n * Each decoration is assigned a quadrant (using round-robin per type)\n * and placed randomly within that quadrant's boundaries with extra margin.\n * Overlap is avoided both in general and between similar emojis (with extra spacing).\n */\nconst RandomDecorations = () => {\n  const [decorations, setDecorations] = useState([]);\n\n  useEffect(() => {\n    const margin = 40; // margin from the container's edges\n    const extraSpacing = 40; // extra spacing between similar emojis\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n    const halfWidth = containerWidth / 2;\n    const halfHeight = containerHeight / 2;\n\n    // Given a quadrant index (0: top-left, 1: top-right, 2: bottom-left, 3: bottom-right)\n    // and a decoration size, return the allowed boundaries.\n    const getQuadrantBounds = (quadIndex, size) => {\n      switch (quadIndex) {\n        case 0:\n          return {\n            leftMin: margin,\n            leftMax: halfWidth - margin - size,\n            topMin: margin,\n            topMax: halfHeight - margin - size,\n          };\n        case 1:\n          return {\n            leftMin: halfWidth + margin,\n            leftMax: containerWidth - margin - size,\n            topMin: margin,\n            topMax: halfHeight - margin - size,\n          };\n        case 2:\n          return {\n            leftMin: margin,\n            leftMax: halfWidth - margin - size,\n            topMin: halfHeight + margin,\n            topMax: containerHeight - margin - size,\n          };\n        case 3:\n          return {\n            leftMin: halfWidth + margin,\n            leftMax: containerWidth - margin - size,\n            topMin: halfHeight + margin,\n            topMax: containerHeight - margin - size,\n          };\n        default:\n          return null;\n      }\n    };\n\n    // We'll store decorations per quadrant for overlap checking.\n    const quadrants = [[], [], [], []];\n\n    // Configuration for each type.\n    const config = [\n      { type: 'heart', count: 20, size: 32, emoji: '♥' },\n      { type: 'arrow', count: 10, size: 32, emoji: '🏹' },\n      { type: 'teddy', count: 10, size: 48, emoji: '🧸' },\n    ];\n\n    config.forEach((item) => {\n      for (let i = 0; i < item.count; i++) {\n        // Assign quadrant in a round-robin way.\n        const quadIndex = i % 4;\n        const bounds = getQuadrantBounds(quadIndex, item.size);\n        let attempts = 0;\n        let placed = false;\n        let left, top;\n        while (!placed && attempts < 100) {\n          attempts++;\n          left = Math.random() * (bounds.leftMax - bounds.leftMin) + bounds.leftMin;\n          top = Math.random() * (bounds.topMax - bounds.topMin) + bounds.topMin;\n          const newRect = { left, top, width: item.size, height: item.size };\n          let overlap = false;\n          // Only check against decorations in the same quadrant.\n          for (let existing of quadrants[quadIndex]) {\n            // If same type, enlarge the existing rectangle by extraSpacing.\n            const requiredExtra = existing.type === item.type ? extraSpacing : 0;\n            const existingRect = {\n              left: existing.left - requiredExtra,\n              top: existing.top - requiredExtra,\n              width: existing.size + 2 * requiredExtra,\n              height: existing.size + 2 * requiredExtra,\n            };\n            if (rectOverlap(newRect, existingRect)) {\n              overlap = true;\n              break;\n            }\n          }\n          if (!overlap) {\n            quadrants[quadIndex].push({\n              ...item,\n              left,\n              top,\n              key: `${item.type}-${i}-${attempts}`,\n            });\n            placed = true;\n          }\n        }\n        // Fallback: if we couldn't place without overlapping.\n        if (!placed) {\n          left = Math.random() * (bounds.leftMax - bounds.leftMin) + bounds.leftMin;\n          top = Math.random() * (bounds.topMax - bounds.topMin) + bounds.topMin;\n          quadrants[quadIndex].push({\n            ...item,\n            left,\n            top,\n            key: `${item.type}-${i}-fallback`,\n          });\n        }\n      }\n    });\n\n    // Combine decorations from all quadrants.\n    const newDecorations = quadrants.flat();\n    setDecorations(newDecorations);\n  }, []);\n\n  return (\n    <>\n      {decorations.map((deco) => (\n        <span\n          key={deco.key}\n          className={deco.type}\n          style={{\n            position: 'absolute',\n            left: deco.left,\n            top: deco.top,\n            fontSize: `${deco.size}px`,\n          }}\n        >\n          {deco.emoji}\n        </span>\n      ))}\n    </>\n  );\n};\n\nfunction LandingPage() {\n  const navigate = useNavigate();\n  const cardRef = useRef(null);\n  const [noButtonStyle, setNoButtonStyle] = useState({\n    position: 'absolute',\n    right: '20px',\n    top: '0px',\n  });\n  const [noButtonMessage, setNoButtonMessage] = useState('');\n  const [noButtonClickCount, setNoButtonClickCount] = useState(0);\n  const noMessages = [\n    \"haha you can't catch me 🤣🫵\",\n    \"nope, not this time ❌\",\n    \"no?! 😵\",\n    \"seriously? 💔\"\n  ];\n\n  const handleNoClick = () => {\n    const newCount = noButtonClickCount + 1;\n    setNoButtonClickCount(newCount);\n    // After 10 clicks, remove the button and show \"say yes 🤠\"\n    if (newCount >= 10) {\n      setNoButtonMessage(\"say yes 🤠\");\n      return;\n    }\n    // Otherwise, randomly show one of the messages and move the button.\n    const randomIndex = Math.floor(Math.random() * noMessages.length);\n    setNoButtonMessage(noMessages[randomIndex]);\n    if (cardRef.current) {\n      const containerWidth = cardRef.current.offsetWidth;\n      const containerHeight = cardRef.current.offsetHeight;\n      const buttonWidth = 120;\n      const buttonHeight = 45;\n      const maxLeft = containerWidth - buttonWidth;\n      const maxTop = containerHeight - buttonHeight;\n      const newLeft = Math.random() * maxLeft;\n      const newTop = Math.random() * maxTop;\n      setNoButtonStyle({\n        position: 'absolute',\n        left: `${newLeft}px`,\n        top: `${newTop}px`,\n        transition: 'all 0.1s ease-in-out',\n      });\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      {/* Reusable background decorations */}\n      <div className=\"decorations\">\n        <RandomDecorations />\n      </div>\n\n      <div className=\"card\" ref={cardRef}>\n        <h1 className=\"title\">Solomiya, be my Valentine?</h1>\n        <h2 className=\"subtitle\">let's not go solo 👩🏼‍❤️‍👨🏻</h2>\n        <div className=\"button-container\">\n          <button className=\"btn yes-btn\" onClick={() => navigate('/invite')}>\n            Yes 💖\n          </button>\n          {noButtonClickCount < 10 && (\n            <button\n              className=\"btn no-btn\"\n              onClick={handleNoClick}\n              style={noButtonStyle}\n            >\n              No\n            </button>\n          )}\n        </div>\n        {noButtonMessage && <div className=\"message\">{noButtonMessage}</div>}\n      </div>\n    </div>\n  );\n}\n\nfunction InvitePage() {\n    // Updated Google Calendar link for a chill evening from 5–7pm,\n    // automatically adding cipf7009@gmail.com to the event.\n    const googleCalendarLink =\"https://calendar.google.com/calendar/r/eventedit?text=valentine's+date+&dates=20250213T170000/20250213T190000&details=Let+me+know+if+this+works+%3A%29%2C+otherwise%2C+I%27ll+meet+you+at+yours&add=cipf7009@gmail.com&add=spast\"      \n    const handleAccept = () => {\n      window.open(googleCalendarLink, '_blank');\n    };\n  \n    return (\n      <div className=\"page-container\">\n        {/* Reusable background decorations */}\n        <div className=\"decorations\">\n          <RandomDecorations />\n        </div>\n  \n        <div className=\"card\">\n          <h1 className=\"title\">hey, sexy. let's hang 🥰</h1>\n          <p className=\"description\">\n            good food, good music, and even better company.\n          </p>\n          <button className=\"btn accept-btn\" onClick={handleAccept}>\n            accept 💌\n          </button>\n        </div>\n      </div>\n    );\n  }\n  \n\nfunction App() {\n  return (\n    <>\n      {/* Background song (ensure the audio file is in your public folder) */}\n      <audio src=\"/Lou Val - Eternal Sunshine (Official Visualizer).mp3\" autoPlay loop />\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<LandingPage />} />\n          <Route path=\"/invite\" element={<InvitePage />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}